name: Publish to Staging

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ closed ]
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/backend:staging-latest
  WORK_DIR: /home/order-system/order-system-backend/staging
  CONTAINER_NAME: order-system-backend-staging
  CONTAINER_NETWORK: nginx_proxied
  STAGING_DB_URL: jdbc:postgresql://order-system-database:5432/order_system_staging
  STAGING_FRONTEND_ROOT_URL: https://zl-order-system.github.io/staging/app
  BACKEND_HOST: staging.order-system.octoberserver.net

jobs:
  publish:
    name: Publish Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
      - name: Build and Publish Image
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: Deploy Image
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            export CONTAINER_NAME=${{env.CONTAINER_NAME}}
            export GOOGLE_CLIENT_ID=${{ secrets.STAGING_GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.STAGING_GOOGLE_CLIENT_SECRET }}
            export DB_USERNAME=${{ secrets.STAGING_DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }}
            export DB_URL=${{ env.STAGING_DB_URL }}
            export FRONTEND_ROOT_URL=${{ env.STAGING_FRONTEND_ROOT_URL }}
            export JWT_KEY=${{ secrets.STAGING_JWT_KEY }}
            export MEAL_AUTH_SECRET=${{ secrets.STAGING_MEAL_AUTH_SECRET }}
            export LINE_CLIENT_ID=NULL
            export LINE_CLIENT_SECRET=NULL
            export BACKEND_HOST=${{ env.BACKEND_HOST }}

            cd ${{ env.WORK_DIR }}
            newgrp docker
            wget -O docker-compose.yml https://raw.githubusercontent.com/zl-order-system/zlsh-order-system-backend/main/deploy/docker-compose.yml
            docker-compose stop
            docker-compose rm -f
            docker-compose pull
            docker-compose up -d
            exit
